<template>

  <view class="container" wx:if="{{init}}">
    <view @tap="enter">
      <!-- 头图区域 -->
      <AvatarPanel :info.sync="userInfo"/>
    </view>
    <view >
      <repeat for="{{userList}}" key="index" index="index" item="item">
        <form bindsubmit="toStudent({{item.id}})" report-submit='true' class="action">
          <button form-type="submit" class="btn-item">
            <image class="icon-xl"  src="/images/icons/customer.png"></image>
            <view class="column-around">
              <text class="btn-item-title ml20 xl">{{item.username}}</text>
              <text class="btn-item-title ml20 lg">{{item.realname==null ? '' : item.realname}}</text>
            </view>
          </button>
        </form>
      </repeat>
    </view>
  </view>
  <view class="tab-border"/>
</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import auth from '../../api/auth';
  import exam from '../../api/exam';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';
  import Navigator from '../../components/weui/navigator';
  import Copyright from '../../components/common/copyright';
  import AvatarPanel from '../../components/common/avatar_panel';

  export default class DeptUser extends wepy.page {
    data = {
      init: false,
      shop: {},
      userList:{},
      status: {},
      statusText: '',
      userInfo: {
        realname: "学生列表"
      },
      limit: '',
      versionText: '',
      limitUrl: ''
    };

    async onLoad (option) {
      await this.load(option);
      Event.listen(Event.USER_LOGIN, this.load.bind(this), this);
      Event.listen(Event.USER_LOGOUT, this.load.bind(this), this);
    };

    async load (option) {
      try {
        var data = await auth.userList(option.deptid);
        this.userList=data.obj;
        console.info("this.userList",this.userList);
      } catch (e) {
        Tips.modal(e.message);
      } finally {
        this.loaded();
      }
    };

    collect(formId){
      if(formId !=null && formId != "the formId is a mock one"){
        exam.collectFormIds(formId);
      }
    };
    async uploadFormIds(){
      var openId = auth.getConfig('openId');
      if (openId == null) {
        openId=await auth.jscode2session();
        await auth.setConfig('openId', openId);
      }
      var formIds = wepy.$instance.globalData.globalFormIds;  // 获取全局推送码
      if (formIds.length>0) {
          formIds = JSON.stringify(formIds);  // 转换成JSON字符串
          wepy.$instance.globalData.globalFormIds = [];  
          await exam.uploadFormIds(formIds);
      }
    };
    methods = {
      async toStudent (id,e) {
        this.collect(e.detail.formId);
      }
    };
    components = {
      Copyright: Copyright,
      Version: Navigator,
      NavStatus: Navigator,
      NavNotice: Navigator,
      NavDelivery: Navigator,
      NavVip: Navigator,
      NavDeliver: Navigator,
      NavReduce: Navigator,
      NavCategory: Navigator,
      NavShops: Navigator,
      NavLogout: Navigator,
      AvatarPanel: AvatarPanel,
      NavManusl: Navigator,
      NavComment:Navigator
    };
    config = {
      navigationBarTitleText: '学生信息'
    };
    mixins = [base];
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .btn-item {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    padding-left: 8px;
    padding-top: 8px;
    padding-right: 8px;
    padding-bottom: 8px;
    margin-left: 8px;
    margin-right: 8px;
    margin-top: 8px;
    background-color: #fff;
    border: 1px solid #eaeaea;
    border-bottom: 1px solid #d0d0d0;
    border-radius: 5px;
    position: relative;
  }
  .btn-image {
    width: 60px;
    height: 60px;
  }
  .btn-item-title {
    word-break:keep-all;
    white-space:nowrap;
    width: 500rpx;
    height: 60rpx;
    text-align: left;
    overflow:hidden;
    text-overflow:ellipsis;
  }

</style>
